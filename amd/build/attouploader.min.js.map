{"version":3,"file":"attouploader.min.js","sources":["../src/attouploader.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Uploader Script used in atto plugin.\n *\n * @copyright (C) 2019-2023 Yamaguchi University (gh-cc@mlex.cc.yamaguchi-u.ac.jp)\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module atto_yukaltura/attouploader\n */\n\ndefine(['jquery'], function($) {\n\n    return {\n        /**\n         * Initial function.\n         * @access public\n         */\n        init: function() {\n\n            var fileName = \"\";\n            var fileSize = 0;\n\n            var uploadFileType = \"\";\n            var naturalWidth = 0;\n            var naturalHeight = 0;\n\n            var MEDIA_TYPE = {\n                VIDEO: 1,\n                IMAGE: 2,\n                AUDIO: 5\n            };\n\n            var AUTO_FINALIZE = {\n                TRUE: 1,\n                FALSE: 0,\n                NULL: -1\n            };\n\n            var ENTRY_STATUS = {\n                ENTRY_IMPORTING: -2,\n                ENTRY_CONVERTING: -1,\n                ENTRY_IMPORT: 0,\n                ENTRY_PRECONVERT: 1,\n                ENTRY_READY: 2,\n                ENTRY_DELETED: 3,\n                ENTRY_PENDING: 4,\n                ENTRY_MODERATE: 5,\n                ENTRY_BLOCKED: 6,\n                ENTRY_NO_CONTENT: 7\n            };\n\n            var UPLOAD_TOKEN_STATUS = {\n                PENDING: 0,\n                PARTIAL_UPLOAD: 1,\n                FULL_UPLOAD: 2,\n                CLOSED: 3,\n                TIMED_OUT: 4,\n                DELETED: 5\n            };\n\n            var createObjectURL = window.URL && window.URL.createObjectURL\n                    ? function(file) {\n                        return window.URL.createObjectURL(file);\n                    }\n                    : window.webkitURL && window.webkitURL.createObjectURL\n                        ? function(file) {\n                            return window.webkitURL.createObjectURL(file);\n                        }\n                        : undefined;\n\n            var revokeObjectURL = window.URL && window.URL.revokeObjectURL\n                    ? function(file) {\n                        return window.URL.revokeObjectURL(file);\n                    }\n                    : window.webkitURL && window.webkitURL.revokeObjectURL\n                        ? function(file) {\n                            return window.webkitURL.revokeObjectURL(file);\n                        }\n                        : undefined;\n\n            /**\n             * This function checks metadata.\n             * @access public\n             */\n            function checkForm() {\n                if ($(\"#fileData\") === null ||\n                    $(\"#fileData\").files === null ||\n                    $(\"#name\").val() === \"\" ||\n                    $(\"#tags\").val() === \"\" ||\n                    $(\"#type\").val() === \"\" ||\n                    $(\"#type\").val() === \"N/A\") {\n                    // Dsiable upload button.\n                    $(\"#entry_submit\").prop(\"disabled\", true);\n                    $(\"#entry\").val(\"\");\n                } else {\n                    // Enable upload button.\n                    $(\"#entry_submit\").prop(\"disabled\", false);\n                }\n            }\n\n            /**\n             * This function checks file size.\n             * @access public\n             * @return {bool} - The file can upload?\n             */\n            function checkFileSize() {\n                if (fileSize <= 0) {\n                    return false;\n                }\n                if (fileSize > 2000000000) {\n                    return false;\n                }\n                return true;\n            }\n\n            /**\n             * This function checks file type.\n             * @access public\n             * @param {string} fileType - file type of selected media.\n             * @return {string} - media type string for kaltura server.\n             */\n            function checkFileType(fileType) {\n                if (fileType.indexOf(\"video/avi\") != -1 || fileType.indexOf(\"video/x-msvideo\") != -1 ||\n                    fileType.indexOf(\"video/mpeg\") != -1 || fileType.indexOf(\"video/mpg\") != -1 ||\n                    fileType.indexOf(\"video/mp4\") != -1 || fileType.indexOf(\"video/ogg\") != -1 ||\n                    fileType.indexOf(\"video/quicktime\") != -1 || fileType.indexOf(\"video/VP8\") != -1 ||\n                    fileType.indexOf(\"video/x-flv\") != -1 || fileType.indexOf(\"video/x-f4v\") != -1 ||\n                    fileType.indexOf(\"video/x-matroska\") != -1 ||\n                    fileType.indexOf(\"video/x-ms-wmv\") != -1 || fileType.indexOf(\"video/webm\") != -1) {\n                    return \"video\";\n                }\n\n                if (fileType.indexOf(\"audio/ac3\") != -1 || fileType.indexOf(\"audio/ogg\") != -1 ||\n                    fileType.indexOf(\"audio/mpeg\") != -1 || fileType.indexOf(\"audio/mp4\") != -1 ||\n                    fileType.indexOf(\"audio/mp3\") != -1 ||\n                    fileType.indexOf(\"audio/wav\") != -1 || fileType.indexOf(\"audio/x-ms-wma\") != -1) {\n                    return \"audio\";\n                }\n\n                if (fileType.indexOf(\"image/gif\") != -1 || fileType.indexOf(\"image/jpeg\") != -1 ||\n                    fileType.indexOf(\"image/png\") != -1 || fileType.indexOf(\"image/tiff\") != -1) {\n                    return \"image\";\n                }\n\n                return \"N/A\";\n            }\n\n            /**\n             * This function is callback for selection of media file.\n             * @access public\n             */\n            function handleFileSelect() {\n\n                var alertInfo = '';\n\n                // There exists selected file.\n                if ($(\"#fileData\")) {\n                    // Get an object of selected file.\n                    var file = $(\"#fileData\").prop(\"files\")[0];\n\n                    fileSize = parseInt(file.size);\n                    var typeResult = checkFileType(encodeURI(file.type));\n                    var sizeResult = checkFileSize();\n\n                    require(['core/str', 'core/notification'], function(str, notification) {\n                        var strings = [\n                            {key: 'wrong_filesize', component: 'local_yumymedia'},\n                            {key: 'unsupported_filetype', component: 'local_yumymedia'},\n                            {key: 'filesize', component: 'local_yumymedia'},\n                            {key: 'mimetype', component: 'local_yumymedia'}\n                        ];\n                        str.get_strings(strings).then(function(results) {\n                            // When file size is wrong.\n                            if (sizeResult === false) {\n                                alertInfo += results[0];\n                            }\n                            // When file is no supported.\n                            if (typeResult == \"N/A\") {\n                                alertInfo += results[1];\n                            }\n\n                            // When any warning occures.\n                            if (alertInfo !== \"\") {\n                                window.alert(alertInfo);\n                                $(\"#file_info\").html(\"\");\n                                $(\"#name\").val(\"\");\n                                $(\"#tags\").val(\"\");\n                                $(\"#description\").val(\"\");\n                                $(\"#type\").val(\"\");\n                                $(\"#fileData\").val(\"\");\n                                naturalWidth = 0;\n                                naturalHeight = 0;\n                                uploadFileType = \"\";\n                            } else { // When any warning do not occures.\n                                var fileInfo = \"\";\n                                var sizeStr = \"\";\n                                var dividedSize = 0;\n\n                                fileName = file.name;\n\n                                if (fileSize > 1024 * 1024 * 1024) { // When file size exceeds 1GB.\n                                    dividedSize = fileSize / (1024 * 1024 * 1024);\n                                    sizeStr = dividedSize.toFixed(2) + \" G\";\n                                } else if (fileSize > 1024 * 1024) { // When file size exceeds 1MB.\n                                    dividedSize = fileSize / (1024 * 1024);\n                                    sizeStr = dividedSize.toFixed(2) + \" M\";\n                                } else if (fileSize > 1024) { // When file size exceeds 1kB.\n                                    dividedSize = fileSize / 1024;\n                                    sizeStr = dividedSize.toFixed(2) + \" k\";\n                                } else { // When file size under 1kB.\n                                    sizeStr = fileSize + \" \";\n                                }\n\n                                fileInfo += \"<div id=metadata_fields>\";\n                                fileInfo += results[2] + \": \" + sizeStr + \"bytes<br>\";\n                                fileInfo += results[3] + \":\" + encodeURI(file.type) + \"<br>\";\n                                fileInfo += \"</div><hr>\";\n\n                                $(\"#file_info\").html(fileInfo);\n                                $(\"#name\").val(fileName);\n                                $(\"#type\").val(typeResult);\n                            }\n                            return 0;\n                        }).fail(notification.exception);\n                        return 0;\n                    });\n\n                    if (typeResult == 'image') {\n                        var image = new Image();\n                        image.onload = function() {\n                            naturalWidth = image.naturalWidth;\n                            naturalHeight = image.naturalHeight;\n                            revokeObjectURL(image.src);\n                            window.console.log(naturalWidth);\n                            window.console.log(naturalHeight);\n                        };\n                        image.src = createObjectURL(file);\n                    } else {\n                        naturalWidth = 0;\n                        naturalHeight = 0;\n                    }\n\n                    uploadFileType = typeResult;\n                }\n\n                checkForm();\n            }\n\n            /**\n             * This function is callback for reset button.\n             * @access public\n             */\n            function handleResetClick() {\n                $(\"#file_info\").html(\"\");\n                $(\"#type\").val(\"\");\n                uploadFileType = \"\";\n                naturalWidth = 0;\n                naturalHeight = 0;\n            }\n\n            /**\n             * This function checks name of media.\n             * @access public\n             * @param {string} str - name of media.\n             * @return {bool} - if name is appropriate, return \"true\". Otherwise, return \"false\".\n             */\n            function checkNameString(str) {\n                var regex = /[\"$%&'~^\\\\`/]/;\n                if (regex.test(str) === true) {\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n\n            /**\n             * This function checks tags of media.\n             * @access public\n             * @param {string} str - tagas of media.\n             * @return {bool} - if tags are appropriate, return \"true\". Otherwise, return \"false\".\n             */\n            function checkTagsString(str) {\n                var regex = /[!\"#$%&'~|^\\\\@`()[\\]{}:;+*/=<>?]/;\n                if (regex.test(str) === true) {\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n\n            /**\n             * This function checks metadata of media.\n             * @access public\n             * @return {bool} - if metadata is appropriate, return \"true\". Otherwise, return \"false\".\n             */\n            function checkMetadata() {\n                var nameStr = $(\"#name\").val();\n                var tagsStr = $(\"#tags\").val();\n                var descStr = $(\"#description\").val();\n\n                var flag = true;\n\n                if (checkNameString(nameStr) === false) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('wrong_name', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            window.alert(localizedString);\n                        });\n                    });\n                    flag = false;\n                }\n\n                if (checkTagsString(tagsStr) === false) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('wrong_tags', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            window.alert(localizedString);\n                        });\n                    });\n                    flag = false;\n                }\n\n                if (checkNameString(descStr) === false) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('wrong_desc', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            window.alert(localizedString);\n                        });\n                    });\n                    flag = false;\n                }\n\n                return flag;\n            }\n\n            /**\n             * This function is callback for submit button.\n             * @access public\n             * @return {bool} - if file is uploaded, return true. Otherwise, return false.\n             */\n            function handleSubmitClick() {\n\n                if (checkMetadata() === false) {\n                    return false;\n                }\n                if (checkFileSize() === false) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('wrong_filesize', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            window.alert(localizedString);\n                        });\n                    });\n                    return false;\n                }\n\n                $(\"#entry_submit\").prop(\"disabled\", true);\n                executeUploadProcess(); // Executes upload.\n\n                return true;\n            }\n\n            /**\n             * This function close kaltura session.\n             * @access public\n             */\n            function sessionEnd() {\n                var serverHost = $(\"#kalturahost\").val(); // Get hostname of kaltura server.\n                var serviceURL = serverHost + \"/api_v3/service/session/action/end\";\n\n                // Transmits data.\n                $.ajax({\n                    type: \"GET\",\n                    url: serviceURL,\n                    cache: false\n                })\n                .done(function(xmlData) {\n                    // Response is not XML.\n                    if (xmlData === null) {\n                        window.console.log(\"Cannot delete the uploadToken ! (Cannot get a XML response.)\");\n                    } else {\n                        window.console.log(\"Kaltura Session has been deleted.\");\n                    }\n                })\n                .fail(function(xmlData) {\n                    window.console.log(\"Cannot delete the uploadToken ! (Cannot connect to content server.)\");\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                });\n            }\n\n            /**\n             * This function prints error message.\n             * @access public\n             * @param {string} errorMessage - string of error message.\n             * @param {string} ks - session string of kaltura connecion;\n             * @param {string} uploadTokenId - upload token id.\n             */\n            function printErrorMessage(errorMessage, ks, uploadTokenId) {\n                if (ks !== \"\" && uploadTokenId !== \"\") {\n                    deleteUploadToken();\n                }\n\n                $(\"#upload_info\").html(\"\");\n                $(\"#upload_info\").append(\"<font color=\\\"red\\\">\" + errorMessage + \"</font><br>\");\n\n                disableInsertButton();\n                enableCancelButton();\n            }\n\n            /**\n             * This function prints success message.\n             * @access public\n             * @param {string} id - id of media entry.\n             * @param {string} name - name of media entry.\n             * @param {string} tags - tags of media entry.\n             * @param {string} description - description of media entry.\n             * @param {string} creatorId - username of creator.\n             */\n            function printSuccessMessage(id, name, tags, description, creatorId) {\n\n                require(['core/str', 'core/notification'], function(str, notification) {\n                    var strings = [\n                        {key: 'upload_success', component: 'local_yumymedia'},\n                        {key: 'entryid_header', component: 'local_yumymedia'},\n                        {key: 'name_header', component: 'local_yumymedia'},\n                        {key: 'tags_header', component: 'local_yumymedia'},\n                        {key: 'desc_header', component: 'local_yumymedia'},\n                        {key: 'creatorid_header', component: 'local_yumymedia'},\n                        {key: 'insert_media', component: 'atto_yukaltura'}\n                    ];\n                    str.get_strings(strings).then(function(results) {\n                        var output = '<h3>' + results[0] + '</h3>';\n                        output += '<table border=\"2\" cellpadding=\"5\">';\n                        output += '<tr><td>' + results[1] + '</td><td>' + id + '</td></tr>';\n                        output += '<tr><td>' + results[2] + '</td><td>' + name + '</td></tr>';\n                        output += '<tr><td>' + results[3] + '</td><td>' + tags + '</td></tr>';\n                        output += '<tr><td>' + results[4] + '</td><td>' + description + '</td></tr>';\n                        output += '<tr><td>' + results[5] + '</td><td>' + creatorId + '</td></tr>';\n                        output += '</table>';\n                        output += '<br>';\n                        output += '<p><font color=\"red\">' + results[6] + '</font></p>';\n                        $(\"#upload_info\").html(output);\n                        return 0;\n                    }).fail(notification.exception);\n                });\n\n                // Enable dialogue buttons.\n                enableInsertButton();\n                enableCancelButton();\n            }\n\n            /**\n             * This function get hidden parameters.\n             * @access public\n             */\n            function getHiddenParameters() {\n                // Create new element if entry id element is null.\n                if (parent.document.getElementById('yukaltura_select_id') === null ||\n                    parent.document.getElementById('yukaltura_select_id')[0] === null) {\n                    var element = $('body', parent.document);\n\n                    var str = '<input type=\"hidden\" name=\"yukaltura_select_id\" id=\"yukaltura_select_id\" value=\"\">';\n                    element.append(str);\n\n                    str = '<input type=\"hidden\" name=\"yukaltura_select_name\" id=\"yukaltura_select_name\" value=\"\">';\n                    element.append(str);\n\n                    var kalturahost = $('#kalturahost').val();\n                    str = '<input type=\"hidden\" name=\"yukaltura_host\" id=\"yukaltura_host\" value=\"';\n                    str = str + kalturahost + '\">';\n                    element.append(str);\n\n                    var partnerid = $('#partnerid').val();\n                    str = '<input type=\"hidden\" name=\"yukaltura_partnerid\" id=\"yukaltura_partnerid\" value=\"';\n                    str = str + partnerid + '\">';\n                    element.append(str);\n\n                    var uiconfid = $('#uiconfid').val();\n                    str = '<input type=\"hidden\" name=\"yukaltura_uiconfid\" id=\"yukaltura_uiconfid\" value=\"';\n                    str = str + uiconfid + '\">';\n                    element.append(str);\n\n                    var width = $('#player_width').val();\n                    str = '<input type=\"hidden\" name=\"yukaltura_width\" id=\"yukaltura_width\" value=\"' + width + '\">';\n                    element.append(str);\n\n                    var height = $('#player_height').val();\n                    str = '<input type=\"hidden\" name=\"yukaltura_height\" id=\"yukaltura_height\" value=\"' + height + '\">';\n                    element.append(str);\n\n                    var studio = $('#player_studio').val();\n                    str = '<input type=\"hidden\" name=\"yukaltura_playerstudio\" id=\"yukaltura_playerstudio\" value=\"' + studio + '\">';\n                    element.append(str);\n\n                    str = '<input type=\"hidden\" name=\"yukaltura_filetype\" id=\"yukaltura_filetype\" value=\"';\n                    str += uploadFileType + '\">';\n                    element.append(str);\n\n                    str = '<input type=\"hidden\" name=\"yukaltura_filetype\" id=\"yukaltura_filetype\" value=\"\">';\n                    element.append(str);\n\n                    str = '<input type=\"hidden\" name=\"yukaltura_naturalwidth\" id=\"yukaltura_naturalwidth\" value=\"\">';\n                    element.append(str);\n\n                    str = '<input type=\"hidden\" name=\"yukaltura_naturalheight\" id=\"yukaltura_naturalheight\" value=\"\">';\n                    element.append(str);\n                }\n            }\n\n            /**\n             * This function update hidden parameters,\n             * @access public\n             * @param {string} id - id of media entry.\n             * @param {string} name - name of media entry.\n             */\n            function updateHiddenParameters(id, name) {\n                if (id !== null && id !== '' &&\n                    parent.document.getElementById('yukaltura_select_id') !== null &&\n                    parent.document.getElementById('yukaltura_select_id')[0] !== null) {\n                    // Set entry id of selected media.\n                    $('#yukaltura_select_id', parent.document).val(id);\n                    // Set entry name of selected media.\n                    $('#yukaltura_select_name', parent.document).val(name);\n\n                    $('#yukaltura_filetype', parent.document).val(uploadFileType);\n                    $('#yukaltura_naturalwidth', parent.document).val(naturalWidth);\n                    $('#yukaltura_naturalheight', parent.document).val(naturalHeight);\n                }\n            }\n\n            /**\n             * This function enable insert button.\n             * @access public\n             */\n            function enableInsertButton() {\n                // Eable insert button.\n                $('#yukaltura_insert_btn', parent.document).prop(\"disabled\", false);\n                $('#yukaltura_insert_btn', parent.document).css({opacity: \"1.0\"});\n            }\n\n            /**\n             * This function disable insert button.\n             * @access public\n             */\n            function disableInsertButton() {\n                // Disable insert button.\n                $('#yukaltura_insert_btn', parent.document).prop(\"disabled\", true);\n                $('#yukaltura_insert_btn', parent.document).css({opacity: \"0.5\"});\n            }\n\n            /**\n             * This function enable cancel button.\n             * @access public\n             */\n            function enableCancelButton() {\n                // Eable cancel button.\n                $('#yukaltura_cancel_btn', parent.document).prop(\"disabled\", false);\n                $('#yukaltura_cancel_btn', parent.document).css({opacity: \"1.0\"});\n            }\n\n            /**\n             * This function disable cancel button.\n             * @access public\n             */\n            function disableCancelButton() {\n                // Disable cancel button.\n                $('#yukaltura_cancel_btn', parent.document).prop(\"disabled\", true);\n                $('#yukaltura_cancel_btn', parent.document).css({opacity: \"0.5\"});\n            }\n\n            /**\n             * This function executes upload process.\n             * @access public\n             */\n            function executeUploadProcess() {\n                var serverHost = $(\"#kalturahost\").val(); // Get hostname of kaltura server.\n                var ks = $(\"#ks\").val(); // Get session id.\n\n                disableInsertButton();\n                disableCancelButton();\n\n                getHiddenParameters();\n\n                // Create upload token.\n                createUploadToken(serverHost, ks);\n            }\n\n            /**\n             * This function deletes upload token.\n             * @access public\n             * @param {string} serverHost - hostname of kaltura server.\n             * @param {string} ks - session string of kaltura connection.\n             * @param {string} uploadTokenId - token id for uploading.\n             * @return {bool} - if upload token is deleted, return true.\n             */\n            function deleteUploadToken(serverHost, ks, uploadTokenId) {\n                var fd = new FormData();\n                var flag;\n\n                // Set form data.\n                fd.append(\"action\", \"delete\");\n                fd.append(\"ks\", ks);\n                fd.append(\"uploadTokenId\", uploadTokenId);\n\n                // Set transmission data.\n                var postData = {\n                    type: \"POST\",\n                    data: fd,\n                    cache: false,\n                    contentType: false,\n                    scriptCharset: \"utf-8\",\n                    processData: false,\n                    async: true,\n                    dataType: \"xml\"\n                };\n\n                var serviceURL = serverHost + \"/api_v3/service/uploadToken/action/delete\";\n\n                // Transmits a data.\n                $.ajax(\n                    serviceURL, postData\n                )\n                .done(function(xmlData) {\n                    // When response is not XML.\n                    if (xmlData === null) {\n                        flag = false;\n                    }\n                    flag = true;\n                })\n                .fail(function(xmlData) {\n                    flag = false;\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                });\n\n                return flag;\n            }\n\n            /**\n             * This function creates upload token.\n             * @access public\n             * @param {string} serverHost - hostname of kaltura server.\n             * @param {string} ks - session string of kaltura connection.\n             */\n            function createUploadToken(serverHost, ks) {\n                var uploadTokenId;\n                var findData;\n\n                var file = $(\"#fileData\").prop(\"files\")[0];\n\n                fileSize = parseInt(encodeURI(file.size));\n\n                var postData = {\n                    type: \"GET\",\n                    cache: false,\n                    async: true,\n                    contentType: false,\n                    scriptCharset: \"utf-8\",\n                    dataType: \"xml\"\n                };\n\n                var serviceURL = serverHost + \"/api_v3/service/uploadToken/action/add?ks=\" + ks;\n                serviceURL = serviceURL + \"&uploadToken:objectType=KalturaUploadToken\";\n                serviceURL = serviceURL + \"uploadToken:fileName=\" + encodeURI(fileName);\n                serviceURL = serviceURL + \"&uploadToken:fileSize=\" + fileSize;\n                serviceURL = serviceURL + \"&uploadToken:autoFinalize=\" + AUTO_FINALIZE.NULL;\n\n                // Transmits data.\n                $.ajax(\n                    serviceURL, postData\n                )\n                .done(function(xmlData) {\n                    // Response is not XML.\n                    if (xmlData === null) {\n                        printErrorMessage(\"Cannot create upload token !<br>(Cannot get a XML response.)\");\n                        return;\n                    }\n\n                    // Get a tag of error code.\n                    findData = $(xmlData).find(\"code\");\n                    // There exists error code.\n                    if (findData !== null && typeof findData !== undefined && findData.text() !== \"\") {\n                        printErrorMessage(\"Cannot create upload token !<br>(\" + findData.text() + \")\");\n                        return;\n                    }\n\n                    findData = $(xmlData).find(\"status\");\n                    // There not exists upload token id.\n                    if (findData === null || typeof findData === undefined || findData.text() === \"\") {\n                        printErrorMessage(\"Cannot create upload token !<br>(Cannot get status of upload token.)\");\n                        return;\n                    }\n\n                    var uploadTokenStatus = findData.text();\n                    if (uploadTokenStatus != UPLOAD_TOKEN_STATUS.PENDING) {\n                        printErrorMessage(\"Cannot create upload token !<br>(UPLOAD_TOKEN_STATUS : \" + uploadTokenStatus + \")\");\n                        return;\n                    }\n                    // Get upload token id.\n                    findData = $(xmlData).find(\"id\");\n                    // There not exists upload token id.\n                    if (findData === null || typeof findData === undefined || findData.text() === \"\") {\n                        printErrorMessage(\"Cannot create uplaod token !<br>(Cannot get an uploadTokenId.)\");\n                        return;\n                    }\n                    uploadTokenId = findData.text();\n                    // Entry metadata.\n                    setTimeout(function() {\n                        createMediaEntry(serverHost, ks, uploadTokenId);\n                    }, 50);\n\n                })\n                .fail(function(xmlData) {\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                    printErrorMessage(\"Cannot create upload token !<br>(Cannot connect to kaltura server.)\");\n                });\n            }\n\n            /**\n             * This function creates media entry.\n             * @access public\n             * @param {string} serverHost - hostname of kaltura server.\n             * @param {string} ks - session string of kaltura connecion;\n             * @param {string} uploadTokenId - upload token id.\n             */\n            function createMediaEntry(serverHost, ks, uploadTokenId) {\n                var findData;\n                var entryStatus;\n                var entryId = \"\";\n                var entryName = \"\";\n                var entryTags = \"\";\n                var entryDescription = \"\";\n                var entryCreatorId = \"\";\n\n                var nameStr = $(\"#name\").val();\n                var tagsStr = $(\"#tags\").val();\n                var descStr = $(\"#description\").val();\n                var controlId = $(\"#controlId\").val();\n                var creatorId = $(\"#creatorId\").val();\n\n                nameStr = nameStr.trim();\n                tagsStr = tagsStr.trim();\n                if (descStr !== null) {\n                    descStr = descStr.trim();\n                }\n\n                var fd = new FormData();\n\n                // Creates form data.\n                fd.append(\"action\", \"add\");\n                fd.append(\"ks\", ks);\n                fd.append(\"entry:objectType\", \"KalturaMediaEntry\");\n\n                var type = $(\"#type\").val();\n                var mediaType = \"\";\n\n                if (type == \"image\") {\n                    mediaType = MEDIA_TYPE.IMAGE;\n                } else if (type == \"audio\") {\n                    mediaType = MEDIA_TYPE.AUDIO;\n                } else {\n                    mediaType = MEDIA_TYPE.VIDEO;\n                }\n\n                fd.append(\"entry:mediaType\", mediaType);\n                fd.append(\"entry:sourceType\", 1);\n                fd.append(\"entry:name\", nameStr);\n                fd.append(\"entry:tags\", tagsStr);\n                if (descStr !== null && descStr !== \"\") {\n                    fd.append(\"entry:description\", descStr);\n                } else {\n                    fd.append(\"entry:description\", \"\");\n                }\n\n                fd.append(\"entry:categories\", $(\"#categories\").val());\n\n                if (controlId !== null && controlId !== \"\") {\n                    fd.append(\"entry:accessControlId\", controlId);\n                }\n\n                fd.append(\"entry:creatorId\", creatorId);\n                fd.append(\"entry:userId\", creatorId);\n\n                // Creates transmission data.\n                var postData = {\n                    type: \"POST\",\n                    data: fd,\n                    cache: false,\n                    async: true,\n                    contentType: false,\n                    scriptCharset: \"utf-8\",\n                    processData: false,\n                    dataType: \"xml\"\n                };\n\n                var serviceURL = serverHost + \"/api_v3/service/media/action/add\";\n\n                // Transmits data.\n                $.ajax(\n                    serviceURL, postData\n                )\n                .done(function(xmlData) {\n                    // Response is not XML.\n                    if (xmlData === null || typeof xmlData === undefined) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot create media entry !<br>(Cannot get a XML response.)\");\n                        return;\n                    }\n\n                    // Get a tag of error code.\n                    findData = $(xmlData).find(\"code\");\n                    // There exists an error code.\n                    if (findData !== null && typeof findData !== undefined && findData.text() !== \"\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot create media entry !<br>(\" + findData.text() + \")\");\n                        return;\n                    }\n\n                    // Get a tag of status.\n                    findData = $(xmlData).find(\"status\");\n                    // There not exists a tag of status.\n                    if (findData === null || typeof findData === undefined || findData.text() === \"\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot create media entyry !<br>(Cannot get a mediaEntryStatus.)\");\n                        return;\n                    }\n\n                    // Get a value of status.\n                    entryStatus = findData.text();\n                    // When uploading of metadata failed.\n                    if (entryStatus != ENTRY_STATUS.ENTRY_NO_CONTENT) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot create media entry!<br>(mediaEntryStatus: \" + entryStatus + \")\");\n                        return;\n                    }\n\n                    // Get a tag of entry id.\n                    findData = $(xmlData).find(\"id\");\n                    // Get a value of entry id.\n                    entryId = findData.text();\n                    // Get a tag of name.\n                    findData = $(xmlData).find(\"name\");\n                    // Get a value of name.\n                    entryName = findData.text();\n                    // Get a tag of tags.\n                    findData = $(xmlData).find(\"tags\");\n                    // Get a value of tags.\n                    entryTags = findData.text();\n                    // Get a tag of description.\n                    findData = $(xmlData).find(\"description\");\n                    // There exists description.\n                    if (findData !== null && typeof findData !== undefined && findData.text() !== \"\") {\n                        // Get a value of description.\n                        entryDescription = findData.text();\n                    } else {\n                        entryDescription = \"\";\n                    }\n                    // Get a tago of creator id.\n                    findData = $(xmlData).find(\"creatorId\");\n                    // Get a value of creator id.\n                    entryCreatorId = findData.text();\n\n                    if (entryId === null || entryId === \"\" || entryName === null || entryName === \"\" ||\n                        entryTags === null || entryTags === \"\" || entryCreatorId === null || entryCreatorId === \"\" ||\n                        descStr !== \"\" && (entryDescription === null || entryDescription === \"\")) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"There exists wrong information(s) <br>\");\n                        return;\n                    }\n\n                    // Associate uploaded file with media entry.\n                    setTimeout(function() {\n                        uploadMediaFile(serverHost, ks, uploadTokenId, entryId);\n                    }, 50);\n\n                })\n                .fail(function(xmlData) {\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                    deleteUploadToken(serverHost, ks, uploadTokenId);\n                    printErrorMessage(\"Cannot create media entry !<br>(Cannot connect to kaltura server.)\");\n                    return;\n                });\n            }\n\n            /**\n             * This function uploads media file.\n             * @access public\n             * @param {string} serverHost - hostname of kaltura server.\n             * @param {string} ks - session string of kaltura connection.\n             * @param {string} uploadTokenId - upload token id.\n             * @param {string} entryId - id of media entry.\n             */\n            function uploadMediaFile(serverHost, ks, uploadTokenId, entryId) {\n                var findData;\n                var fd = new FormData();\n\n                // Creates form data.\n                fd.append(\"action\", \"upload\");\n                fd.append(\"ks\", ks);\n                fd.append(\"uploadTokenId\", uploadTokenId);\n                fd.append(\"fileData\", $(\"input[name='fileData']\").prop(\"files\")[0], encodeURI(fileName), fileSize);\n                fd.append(\"resume\", false);\n                fd.append(\"finalChunk\", true);\n                fd.append(\"resumeAt\", 0);\n\n                // Creates tnramission data.\n                var postData = {\n                    type: \"POST\",\n                    data: fd,\n                    cache: false,\n                    async: true,\n                    contentType: false,\n                    scriptCharset: \"utf-8\",\n                    processData: false,\n                    dataType: \"xml\",\n                    xhr: function() {\n                        var XHR = $.ajaxSettings.xhr();\n                        if (XHR.upload) {\n                            XHR.upload.addEventListener(\"progress\", function(e) {\n                                var newValue = parseInt(e.loaded / e.total * 100);\n                                $(\"#pvalue\").html(parseInt(newValue));\n                            }, false);\n                        }\n                        return XHR;\n                    }\n                };\n\n                $(\"#upload_info\").html(\"\");\n\n                require(['core/str'], function(str) {\n                    var message = str.get_string('uploader_uploading', 'local_yumymedia', null);\n                    $.when(message).done(function(localizedString) {\n                        $(\"#upload_info\").append(localizedString + \"<br>\");\n                    });\n                });\n\n                require(['core/str'], function(str) {\n                    var message = str.get_string('progress', 'local_yumymedia', null);\n                    $.when(message).done(function(localizedString) {\n                        var str = \"<p>\" + localizedString;\n                        str = str + \": <span id=\\\"pvalue\\\" style=\\\"color:#00b200\\\">0.00</span> %</p>\";\n                        $(\"#upload_info\").append(str);\n                    });\n                });\n\n                var serviceURL = serverHost + \"/api_v3/service/uploadToken/action/upload\";\n\n                // Transmits data.\n                $.ajax(\n                    serviceURL, postData\n                )\n                .done(function(xmlData) {\n                    // Response is not XML.\n                    if (xmlData === null) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot upload the video !<br>(Cannot get a XML response.)\");\n                        return;\n                    }\n\n                    // Get a tag of error code.\n                    findData = $(xmlData).find(\"code\");\n                    // There exists error code.\n                    if (findData !== null && typeof findData !== undefined && findData.text() !== \"\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot upload the video !<br>(\" + findData.text() + \")\");\n                        return;\n                    }\n\n                    // Get upload token id.\n                    findData = $(xmlData).find(\"status\");\n                    // There not exists upload token id.\n                    if (findData === null || typeof findData === undefined || findData.text() === \"\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot upload the video !<br>(Cannot get an uploadTokenStatus.)\");\n                        return;\n                    }\n\n                    var uploadTokenStatus = findData.text();\n                    if (uploadTokenStatus != UPLOAD_TOKEN_STATUS.FULL_UPLOAD &&\n                        uploadTokenStatus != UPLOAD_TOKEN_STATUS.PARTIAL_UPLOAD) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot upload the video !<br>(UPLOAD_TOKEN_STATUS : \" + uploadTokenStatus + \")\");\n                        return;\n                    } else {\n                        window.console.log(\"File chunk have been transmitted.\");\n                    }\n\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('attach_file', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            $(\"#upload_info\").append(localizedString + \"<br>\");\n                        });\n                    });\n\n                    // Create media entry.\n                    setTimeout(function() {\n                        attachUploadedFile(serverHost, ks, uploadTokenId, entryId);\n                    }, 1000);\n\n                })\n                .fail(function(xmlData) {\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                    deleteUploadToken(serverHost, ks, uploadTokenId);\n                    printErrorMessage(\"Cannot upload the file !<br>(Cannot connect to contents server.)\");\n                    return;\n                });\n            }\n\n            /**\n             * This function uploads metadata.\n             * @access public\n             * @param {string} serverHost - hostname of kaltura server.\n             * @param {string} ks - session string of kaltura connection.\n             * @param {string} uploadTokenId - upload token id.\n             * @param {string} entryId - id of media entry.\n             */\n            function attachUploadedFile(serverHost, ks, uploadTokenId, entryId) {\n                var entryStatus;\n                var entryName = \"\";\n                var entryTags = \"\";\n                var entryDescription = \"\";\n                var entryCreatorId = \"\";\n\n                var findData;\n\n                // Creates form data.\n                var fd = new FormData();\n                fd.append(\"action\", \"addContent\");\n                fd.append(\"ks\", ks);\n                fd.append(\"entryId\", entryId);\n                fd.append(\"resource:objectType\", \"KalturaUploadedFileTokenResource\");\n                fd.append(\"resource:token\", uploadTokenId);\n\n                // Creates transmission data.\n                var postData = {\n                    type: \"POST\",\n                    data: fd,\n                    cache: false,\n                    async: true,\n                    contentType: false,\n                    scriptCharset: \"utf-8\",\n                    processData: false,\n                    dataType: \"xml\"\n                };\n\n                var serviceURL = serverHost + \"/api_v3/service/media/action/addContent\";\n\n                // Transmits data.\n                $.ajax(\n                    serviceURL, postData\n                )\n                .done(function(xmlData) {\n                    // Response is not XML.\n                    if (xmlData === null || typeof xmlData === undefined) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot attach uploaded file !<br>(Cannot get a XML response.)\");\n                        return;\n                    }\n\n                    // Get a tag of error code.\n                    findData = $(xmlData).find(\"code\");\n                    // There exists error code.\n                    if (findData !== null && typeof findData !== undefined && findData.text() !== \"\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot attach uploaded file !<br>(\" + findData.text() + \")\");\n                        return;\n                    }\n\n                    // Get a tag of status.\n                    findData = $(xmlData).find(\"status\");\n                    // There not exists a tag of status.\n                    if (findData === null || typeof findData === undefined || findData.text() === \"\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot attach uploaded file !<br>(Cannot get a mediaEntryStatus.)\");\n                        return;\n                    }\n\n                    // Get a value of status.\n                    entryStatus = findData.text();\n                    // When uploading of metadata failed.\n                    if (entryStatus != ENTRY_STATUS.ENTRY_READY && entryStatus != ENTRY_STATUS.ENTRY_PENDING &&\n                        entryStatus != ENTRY_STATUS.ENTRY_PRECONVERT && entryStatus != ENTRY_STATUS.IMPORT &&\n                        entryStatus != ENTRY_STATUS.IMPORTING) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot attach uploaded file !<br>(mediaEntryStatus: \" + entryStatus + \")\");\n                        return;\n                    }\n\n                    // Get a tag of entry id.\n                    findData = $(xmlData).find(\"id\");\n                    // Get a value of entry id.\n                    entryId = findData.text();\n                    // Get a tag of name.\n                    findData = $(xmlData).find(\"name\");\n                    // Get a value of name.\n                    entryName = findData.text();\n                    // Get a tag of tags.\n                    findData = $(xmlData).find(\"tags\");\n                    // Get a value of tags.\n                    entryTags = findData.text();\n                    // Get a tag of description.\n                    findData = $(xmlData).find(\"description\");\n                    // There exists description.\n                    if (findData !== null && typeof findData !== undefined && findData.text() !== \"\") {\n                        // Get a value of description.\n                        entryDescription = findData.text();\n                    } else {\n                        entryDescription = \"\";\n                    }\n                    // Get a tago of creator id.\n                    findData = $(xmlData).find(\"creatorId\");\n                    // Get a value of creator id.\n                    entryCreatorId = findData.text();\n\n                    // Prints success message.\n                    printSuccessMessage(entryId, entryName, entryTags, entryDescription, entryCreatorId);\n                    // Update hidden parameters on editors' page.\n                    updateHiddenParameters(entryId, entryName);\n\n                })\n                .fail(function(xmlData) {\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                    deleteUploadToken(serverHost, ks, uploadTokenId);\n                    printErrorMessage(\"Cannot attach uploaded file !<br>(Cannot connect to kaltura server.)\");\n                    return;\n                });\n            }\n\n            /**\n             * This function removes hidden parameters in parent document.\n             * @access public\n             */\n            function removeParameters() {\n                $('#yukaltura_select_id', parent.document).remove();\n                $('#yukaltura_select_name', parent.document).remove();\n                $('#yukaltura_host', parent.document).remove();\n                $('#yukaltura_partnerid', parent.document).remove();\n                $('#yukaltura_uiconfid', parent.document).remove();\n                $('#yukaltura_playerstudio', parent.document).remove();\n                $('#yukaltura_width', parent.document).remove();\n                $('#yukaltura_height', parent.document).remove();\n                $('#yukaltura_filetype', parent.document).remove();\n                $('#yukaltura_naturalwidth', parent.document).remove();\n                $('#yukaltura_naturalheight', parent.document).remove();\n            }\n\n            // This function execute when window is chagned.\n            $(window).on(\"change\", function() {\n                checkForm();\n            });\n\n            // This function execute when window is uloaded.\n            $(window).on(\"unload\", function() {\n                sessionEnd();\n            });\n\n            $(\"#fileData\").on(\"change\", function() {\n                handleFileSelect();\n            });\n\n            $(\"#name\").on(\"change\", function() {\n                checkForm();\n            });\n\n            $(\"#tags\").on(\"change\", function() {\n                checkForm();\n            });\n\n            $(\"#entry_submit\").on(\"click\", function() {\n                handleSubmitClick();\n            });\n\n            $(\"#entry_reset\").on(\"click\", function() {\n                handleResetClick();\n            });\n\n            removeParameters();\n            // Dsiable Insert button.\n            disableInsertButton();\n            // Enable cancel button.\n            enableCancelButton();\n        }\n    };\n});\n"],"names":["define","$","init","fileName","fileSize","uploadFileType","naturalWidth","naturalHeight","MEDIA_TYPE","AUTO_FINALIZE","ENTRY_STATUS","ENTRY_IMPORTING","ENTRY_CONVERTING","ENTRY_IMPORT","ENTRY_PRECONVERT","ENTRY_READY","ENTRY_DELETED","ENTRY_PENDING","ENTRY_MODERATE","ENTRY_BLOCKED","ENTRY_NO_CONTENT","UPLOAD_TOKEN_STATUS","createObjectURL","window","URL","file","webkitURL","undefined","revokeObjectURL","checkForm","files","val","prop","checkFileSize","checkNameString","str","test","handleSubmitClick","nameStr","tagsStr","descStr","flag","require","message","get_string","when","done","localizedString","alert","serverHost","ks","disableInsertButton","parent","document","css","opacity","getElementById","element","append","getHiddenParameters","uploadTokenId","findData","parseInt","encodeURI","size","postData","type","cache","async","contentType","scriptCharset","dataType","serviceURL","ajax","xmlData","find","text","uploadTokenStatus","setTimeout","entryStatus","entryId","entryName","entryTags","entryDescription","entryCreatorId","controlId","creatorId","trim","fd","FormData","mediaType","data","processData","deleteUploadToken","printErrorMessage","xhr","XHR","ajaxSettings","upload","addEventListener","e","newValue","loaded","total","html","console","log","IMPORT","IMPORTING","id","name","tags","description","notification","strings","key","component","get_strings","then","results","output","fail","exception","enableCancelButton","printSuccessMessage","dir","attachUploadedFile","uploadMediaFile","createMediaEntry","createUploadToken","errorMessage","on","url","fileType","alertInfo","typeResult","indexOf","sizeResult","fileInfo","sizeStr","toFixed","image","Image","onload","src","handleFileSelect","remove"],"mappings":"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"}