{"version":3,"file":"attorecorder.min.js","sources":["../src/attorecorder.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Recorder Script used in Atto sub-plugin.\n *\n * @copyright (C) 2019-2023 Yamaguchi University (gh-cc@mlex.cc.yamaguchi-u.ac.jp)\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module atto_yukaltura/attorecorder\n */\n\ndefine(['jquery'], function($) {\n\n    return {\n        /**\n         * Initial function.\n         * @access public\n         */\n        init: function() {\n\n            var fileSize = 0;\n            var sizeResult = false;\n            var fileType = \"\";\n\n            var uploadFileType = \"\";\n            var naturalWidth = 0;\n            var naturalHeight = 0;\n\n            var defaultWidth = 400;\n            var defaultHeight = 300;\n\n            var localStream = null;\n            var videoBlob = null;\n            var videoFilename = \"\";\n            var blobUrl = null;\n            var recorder = null;\n            var constraints = null;\n\n            var createObjectURL = window.URL && window.URL.createObjectURL\n                    ? function(file) {\n                        return window.URL.createObjectURL(file);\n                    }\n                    : window.webkitURL && window.webkitURL.createObjectURL\n                        ? function(file) {\n                            return window.webkitURL.createObjectURL(file);\n                        }\n                        : undefined;\n\n            var revokeObjectURL = window.URL && window.URL.revokeObjectURL\n                    ? function(file) {\n                        return window.URL.revokeObjectURL(file);\n                    }\n                    : window.webkitURL && window.webkitURL.revokeObjectURL\n                        ? function(file) {\n                            return window.webkitURL.revokeObjectURL(file);\n                        }\n                        : undefined;\n\n            var MEDIA_TYPE = {\n                VIDEO: 1,\n                IMAGE: 2,\n                AUDIO: 5\n            };\n\n            var AUTO_FINALIZE = {\n                TRUE: 1,\n                FALSE: 0,\n                NULL: -1\n            };\n\n            var ENTRY_STATUS = {\n                ENTRY_IMPORTING: -2,\n                ENTRY_CONVERTING: -1,\n                ENTRY_IMPORT: 0,\n                ENTRY_PRECONVERT: 1,\n                ENTRY_READY: 2,\n                ENTRY_DELETED: 3,\n                ENTRY_PENDING: 4,\n                ENTRY_MODERATE: 5,\n                ENTRY_BLOCKED: 6,\n                ENTRY_NO_CONTENT: 7\n            };\n\n            var UPLOAD_TOKEN_STATUS = {\n                PENDING: 0,\n                PARTIAL_UPLOAD: 1,\n                FULL_UPLOAD: 2,\n                CLOSED: 3,\n                TIMED_OUT: 4,\n                DELETED: 5\n            };\n\n            /**\n             * This function retrieve whether web browser is the Internet Explorer.\n             * @access public\n             * @return {bool} - true if web browser is the IE, otherwise false.\n             */\n            function isIE() {\n                var ua = navigator.userAgent.toLowerCase();\n                var ver = navigator.appVersion.toLowerCase();\n\n                // Case of IE(not 11).\n                var isMsIE = (ua.indexOf('msie') > -1) && (ua.indexOf('opera') == -1);\n                // Case of IE6.\n                var isIE6 = isMsIE && (ver.indexOf('msie 6.') > -1);\n                // Case of IE7.\n                var isIE7 = isMsIE && (ver.indexOf('msie 7.') > -1);\n                // Cae of IE8.\n                var isIE8 = isMsIE && (ver.indexOf('msie 8.') > -1);\n                // Case of IE9.\n                var isIE9 = isMsIE && (ver.indexOf('msie 9.') > -1);\n                // Case of IE10.\n                var isIE10 = isMsIE && (ver.indexOf('msie 10.') > -1);\n                // Case of IE11.\n                var isIE11 = (ua.indexOf('trident/7') > -1);\n\n                return isMsIE || isIE6 || isIE7 || isIE8 || isIE9 || isIE10 || isIE11;\n            }\n\n            /**\n             * This function retrieve whether we browser is the Edge.\n             * @access public\n             * @return {bool} - true if web browser is the Edge, otherwise false.\n             */\n            function isEdge() {\n                var ua = navigator.userAgent.toLowerCase();\n\n                // Case of Edge.\n                var isMsEdge = (ua.indexOf('edge') > -1);\n                // Case of Google Chrome.\n                var isChrome = (ua.indexOf('chrome') > -1) && (ua.indexOf('edge') == -1);\n                // Case of Moziila Firefox.\n                var isFirefox = (ua.indexOf('firefox') > -1);\n                // Case of Safari.\n                var isSafari = (ua.indexOf('safari') > -1) && (ua.indexOf('chrome') == -1);\n                // Case of Opera.\n                var isOpera = (ua.indexOf('opera') > -1);\n\n                return isMsEdge === true && isChrome === false && isFirefox === false && isSafari === false && isOpera === false;\n            }\n\n            /**\n             * This function retrieve whether web browser is unsupported.\n             * @access public\n             * @return {bool} - true if web browser is unsupported, otherwise false.\n             */\n            function checkUnsupportedBrowser() {\n\n                if (isIE() || isEdge()) {\n                    var browser = \"\";\n                    if (isIE()) {\n                        browser = \"Internet Explorer\";\n                    } else {\n                        browser = \"Edge\";\n                    }\n\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('unsupported_browser', 'local_yumymedia', browser);\n                        $.when(message).done(function(localizedString) {\n                            printInitialErrorMessage(localizedString);\n                        });\n                    });\n\n                    disableInsertButton();\n                    enableCancelButton();\n\n                    return true;\n                }\n                return false;\n            }\n\n            /**\n             * This function retrieve os type.\n             * @return {string} - os type.\n             */\n            function getOperatingSystem() {\n                var os;\n                var ua = navigator.userAgent;\n\n                if (ua.match(/iPhone|iPad|iPod/)) {\n                    os = \"iOS\";\n                } else if (ua.match(/Android|android/)) {\n                    os = \"Android\";\n                } else if (ua.match(/Linux|linux/)) {\n                    os = \"Linux\";\n                } else if (ua.match(/Win(dows)/)) {\n                    os = \"Windows\";\n                } else if (ua.match(/Mac|PPC/)) {\n                    os = \"Mac OS\";\n                } else if (ua.match(/CrOS/)) {\n                    os = \"Chrome OS\";\n                } else {\n                    os = \"Other\";\n                }\n\n                return os;\n            }\n\n            /**\n             * This function retrieve whether os is unsupported.\n             * @access public\n             * @return {bool} - true if os is unsupported, otherwise false.\n             */\n            function checkUnsupportedOS() {\n\n                var os = getOperatingSystem();\n\n                if (os == \"iOS\" || os == \"Android\") {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('unsupported_os', 'local_yumymedia', os);\n                        $.when(message).done(function(localizedString) {\n                            printInitialErrorMessage(localizedString);\n                        });\n                    });\n\n                    disableInsertButton();\n                    enableCancelButton();\n\n                    return true;\n                }\n                return false;\n            }\n\n            /**\n             * This function checks scheme of URL.\n             * @return {bool} - If scheme is https, returns true. Otherwise, returns false.\n             */\n            function isHttps() {\n                var str = window.location.protocol;\n                if (str.indexOf('https') != -1) {\n                    return true;\n                }\n                return false;\n            }\n\n            /**\n             * This function print initial error message.\n             * @access public\n             * @param {string} message - error message.\n             */\n            function printInitialErrorMessage(message) {\n                var str = \"\";\n                str = \"<p><font color=\\\"red\\\">\" + message + \"</font></p>\";\n                $(\"#upload_info\").html(str);\n\n                disableInsertButton();\n                enableCancelButton();\n            }\n\n            /**\n             * This function print a video player for playing.\n             * @access public\n             * @param {string} url - url of media.\n             */\n            function setPlayingPlayer(url) {\n                var str = \"<video id=\\\"webcam\\\" width=\\\"\" + defaultWidth + \"\\\" height=\\\"\" + defaultHeight + \"\\\" \";\n                str = str + \"src=\\\"\" + url + \"\\\" autoplay=\\\"false\\\" oncontextmenu=\\\"return false;\\\" controls></video>\";\n                $(\"#videospan\").html(str);\n                document.getElementById(\"webcam\").pause();\n                document.getElementById(\"webcam\").currentTime = 0;\n            }\n\n            /**\n             * This function print a video player for preview.\n             * @access public\n             * @param {string} url - url of media.\n             */\n            function setPreviewPlayer(url) {\n                var str = \"<video id=\\\"webcam\\\" width=\\\"\" + defaultWidth + \"\\\" height=\\\"\" + defaultHeight + \"\\\" \";\n                str = str + \"autoplay=\\\"0\\\" muted oncontextmenu=\\\"return false;\\\"></video>\";\n                $(\"#videospan\").html(str);\n                $(\"#webcam\").attr(\"src\", url);\n            }\n\n            /**\n             * This function start video recording by webcamera.\n             * @access public\n             */\n            function startRecording() {\n                $(\"#recstop\").attr(\"src\", $(\"#stopurl\").val());\n                $(\"#recstop\").off(\"click\");\n\n                $(\"#recstop\").on(\"click\", function() {\n                    stopRecording();\n                });\n\n                $(\"#leftspan\").css(\"display\", \"inline\");\n                $(\"#webcam\").volume = 0.0;\n                recorder.start();\n\n                require(['core/str'], function(str) {\n                    var message = str.get_string('now_recording', 'local_yumymedia', null);\n                    $.when(message).done(function(localizedString) {\n                        $(\"#status\").html(\"<font color=\\\"red\\\">\" + localizedString + \"</font>\");\n                    });\n                });\n            }\n\n            /**\n             * This function stop video recording.\n             * @access public\n             */\n            function stopRecording() {\n                recorder.ondataavailable = function(evt) {\n                    videoBlob = new Blob([evt.data], {type: evt.data.type});\n                    if (window.URL && window.URL.createObjectURL) {\n                        blobUrl = window.URL.createObjectURL(videoBlob);\n                    } else {\n                        blobUrl = window.webkitURL.createObjectURL(videoBlob);\n                    }\n                    setPlayingPlayer(blobUrl);\n                    fileSize = videoBlob.size;\n                    var sizeStr = \"\";\n                    var dividedSize = 0;\n\n                    if (fileSize > 1024 * 1024 * 1024) { // When file size exceeds 1GB.\n                        dividedSize = fileSize / (1024 * 1024 * 1024);\n                        sizeStr = dividedSize.toFixed(2) + \" G\";\n                    } else if (fileSize > 1024 * 1024) { // When file size exceeds 1MB.\n                        dividedSize = fileSize / (1024 * 1024);\n                        sizeStr = dividedSize.toFixed(2) + \" M\";\n                    } else if (fileSize > 1024) { // When file size exceeds 1kB.\n                        dividedSize = fileSize / 1024;\n                        sizeStr = dividedSize.toFixed(2) + \" k\";\n                    } else { // When file size under 1kB.\n                        sizeStr = fileSize + \" \";\n                    }\n\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('video_preview', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            localizedString = \"<font color=\\\"green\\\">\" + localizedString + \"(\" + videoBlob.type + \", \";\n                            localizedString = localizedString + sizeStr + \"B).</font>\";\n                            $(\"#status\").html(localizedString);\n                        });\n                    });\n\n                    fileType = checkFileType(videoBlob.type);\n                    sizeResult = checkFileSize();\n                    if (sizeResult === false) {\n                        require(['core/str'], function(str) {\n                            var message = str.get_string('wrong_filesize', 'local_yumymedia', null);\n                            $.when(message).done(function(localizedString) {\n                                window.alert(localizedString);\n                            });\n                        });\n\n                        uploadFileType = fileType;\n                        naturalWidth = 0;\n                        naturalHeight = 0;\n                    }\n\n                    checkForm();\n                    videoFilename = $(\"#filename\").val() + \".\" + getFileExtension(videoBlob.type);\n                };\n\n                if (localStream.getTracks !== undefined && localStream.getTracks !== null) {\n                    var tracks = localStream.getTracks();\n                    for (var i = tracks.length - 1; i >= 0; --i) {\n                        tracks[i].stop();\n                    }\n                    if (document.getElementById(\"webcam\").srcObject !== undefined) {\n                        document.getElementById(\"webcam\").srcObject = null;\n                    }\n                }\n\n                recorder.stop();\n\n                $(\"#leftspan\").css(\"display\", \"none\");\n                $(\"#rightspan\").css(\"display\", \"inline\");\n\n                $(\"#remove\").on(\"click\", function() {\n                    removeVideo();\n                });\n            }\n\n            /**\n             * This function remove recorded video.\n             * @access public\n             */\n            function removeVideo() {\n                if (!isHttps()) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('require_https', 'local_yumymedia');\n                        $.when(message).done(function(localizedString) {\n                            printInitialErrorMessage(localizedString);\n                        });\n                    });\n                    return;\n                }\n\n                // Print error message and return true if web browser is unsupported.\n                if (checkUnsupportedBrowser() || checkUnsupportedOS()) {\n                    return;\n                }\n\n                navigator.mediaDevices = navigator.mediaDevices || ((navigator.mozGetUserMedia || navigator.webkitGetUserMedia) ? {\n                    getUserMedia: function(c) {\n                        return function(y, n) {\n                            (navigator.mozGetUserMedia || navigator.webkitGetUserMedia).call(navigator, c, y, n);\n                        };\n                    }\n                } : null);\n\n                try {\n                    if (navigator.mediaDevices === null || navigator.mediaDevices === undefined ||\n                        MediaRecorder === null || MediaRecorder === undefined) {\n                        require(['core/str'], function(str) {\n                            var message = str.get_string('disable_webrtc', 'local_yumymedia', null);\n                            $.when(message).done(function(localizedString) {\n                                printInitialErrorMessage(localizedString);\n                            });\n                        });\n                        return;\n                    }\n\n                    if (createObjectURL === null || createObjectURL === undefined ||\n                        revokeObjectURL === null || revokeObjectURL === undefined) {\n                        require(['core/str'], function(str) {\n                            var message = str.get_string('disable_objecturl', 'local_yumymedia', null);\n                            $.when(message).done(function(localizedString) {\n                                printInitialErrorMessage(localizedString);\n                            });\n                        });\n                        return;\n                    }\n                } catch (err) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('disable_webrtc', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            printInitialErrorMessage(localizedString);\n                        });\n                    });\n                    window.console.log(err);\n                    return;\n                }\n\n                setPreviewPlayer(null);\n\n                if (blobUrl !== null) {\n                    if (window.URL && window.URL.revokeObjectURL) {\n                        window.URL.revokeObjectURL(blobUrl);\n                    } else {\n                        window.webkitURL.revokeObjectURL(blobUrl);\n                    }\n                    blobUrl = null;\n                    videoBlob = null;\n                }\n\n                if (localStream !== null) {\n                    if (localStream.getTracks !== undefined || localStream.getTracks !== null) {\n                        var tracks = localStream.getTracks();\n                        for (var i = tracks.length - 1; i >= 0; --i) {\n                            tracks[i].stop();\n                        }\n                        if (document.getElementById(\"webcam\").srcObject) {\n                            document.getElementById(\"webcam\").srcObject = null;\n                        }\n\n                    } else {\n                        localStream.stop();\n                    }\n                }\n\n                fileSize = 0;\n                sizeResult = false;\n                fileType = \"\";\n\n                $(\"#recstop\").off(\"click\");\n                $(\"#remove\").off(\"click\");\n                $(\"#webcam\").off(\"ondataavailable\");\n\n                var mimeOption = \"\";\n\n                var WebcamRecorder = MediaSource || MediaRecorder;\n\n                // Selection of video codec.\n                if (WebcamRecorder.isTypeSupported(\"video/webm\")) {\n                    mimeOption = \"video/webm\";\n                } else if (WebcamRecorder.isTypeSupported(\"video/mp4\")) {\n                    mimeOption = \"video/mp4\";\n                } else if (WebcamRecorder.isTypeSupported(\"video/webm;codecs=vp8,opus\")) {\n                    mimeOption = \"video/webm; codecs=vp8,opus\";\n                } else if (WebcamRecorder.isTypeSupported(\"video/webm;codecs=vp9,opus\")) {\n                    mimeOption = \"video/webm; codecs=vp9,opus\";\n                } else if (WebcamRecorder.isTypeSupported(\"video/webm;codecs=vp8\")) {\n                    mimeOption = \"video/webm; codecs=vp8\";\n                } else {\n                    mimeOption = \"video/webm; codecs=vp9\";\n                }\n\n                // Prefer camera resolution nearest to 1280x720.\n                constraints = {\n                    audioBitsPerSecond: 128000,\n                    videoBitsPerSecond: 1500000,\n                    mimeType: mimeOption,\n                    audio: {\n                        echoCancellation: false\n                    },\n                    video: {\n                        \"mandatory\": {\n                            minWidth: 320,\n                            minHeight: 240,\n                            maxWidth: 1280,\n                            maxHeight: 720,\n                            minFrameRate: 5,\n                            maxFrameRate: 15\n                        },\n                        \"optional\": [{\"facingMode\": \"user\"}]\n                    }\n                };\n\n                var p = navigator.mediaDevices.getUserMedia(constraints);\n\n                p.then(function(stream) {\n                    localStream = stream;\n                    var video = document.getElementById(\"webcam\");\n                    if (video.srcObject !== undefined) {\n                        video.srcObject = localStream;\n                        video.play();\n                    } else {\n                        if (window.URL && window.URL.createObjectURL) {\n                            blobUrl = window.URL.createObjectURL(blobUrl);\n                        } else {\n                            blobUrl = window.webkitURL.createObjectURL(blobUrl);\n                        }\n                        $(\"#webcam\").attr(\"src\", blobUrl);\n                    }\n                    window.console.log(localStream);\n\n                    if (MediaSource !== null || MediaSource !== undefined) {\n                        recorder = new MediaRecorder(localStream);\n                    } else {\n                        recorder = new MediaRecorder(localStream, constraints);\n                    }\n\n                    $(\"#recstop\").attr(\"src\", $(\"#recurl\").val());\n                    $(\"#recstop\").on(\"click\", function() {\n                        startRecording();\n                    });\n                    $(\"#leftspan\").css(\"display\", \"inline\");\n                    $(\"#rightspan\").css(\"display\", \"none\");\n\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('camera_preview', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            $(\"#status\").html(localizedString);\n                        });\n                    });\n\n                    checkForm();\n                    return 0;\n                })\n                .catch(function(err) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('unsupported_camera', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            printInitialErrorMessage(localizedString);\n                        });\n                    });\n\n                    window.console.log(err);\n                    return -1;\n                });\n            }\n\n            /**\n             * This function checks file size.\n             * @access public\n             * @return {bool} - The file can upload?\n             */\n            function checkFileSize() {\n                if (fileSize <= 0) {\n                    return false;\n                }\n                if (fileSize > 2000000000) {\n                    return false;\n                }\n                return true;\n            }\n\n            /**\n             * This function checks file type.\n             * @access public\n             * @param {string} fileType - file type of selected media.\n             * @return {string} - media type string for kaltura server.\n             */\n            function checkFileType(fileType) {\n                if (fileType.indexOf(\"video/avi\") != -1 || fileType.indexOf(\"video/x-msvideo\") != -1 ||\n                    fileType.indexOf(\"video/mpeg\") != -1 || fileType.indexOf(\"video/mpg\") != -1 ||\n                    fileType.indexOf(\"video/mp4\") != -1 || fileType.indexOf(\"video/ogg\") ||\n                    fileType.indexOf(\"video/quicktime\") != -1 || fileType.indexOf(\"video/VP8\") != -1 ||\n                    fileType.indexOf(\"video/x-flv\") != -1 || fileType.indexOf(\"video/x-f4v\") != -1 ||\n                    fileType.indexOf(\"video/x-matroska\") != -1 ||\n                    fileType.indexOf(\"video/x-ms-wmv\") != -1 || fileType.indexOf(\"video/webm\") != -1) {\n                    return \"video\";\n                }\n\n                if (fileType.indexOf(\"audio/ac3\") != -1 || fileType.indexOf(\"audio/ogg\") != -1 ||\n                    fileType.indexOf(\"audio/mpeg\") != -1 || fileType.indexOf(\"audio/mp4\") != -1 ||\n                    fileType.indexOf(\"audio/mp3\") != -1 ||\n                    fileType.indexOf(\"audio/wav\") != -1 || fileType.indexOf(\"audio/x-ms-wma\") != -1) {\n                    return \"audio\";\n                }\n\n                if (fileType.indexOf(\"image/gif\") != -1 || fileType.indexOf(\"image/jpeg\") != -1 ||\n                    fileType.indexOf(\"image/png\") != -1 || fileType.indexOf(\"image/tiff\") != -1) {\n                    return \"image\";\n                }\n\n                return \"N/A\";\n            }\n\n            /**\n             * This function return file extension string.\n             * @access public\n             * @param {string} fileType - file type of selected media.\n             * @return {string} - file extension of selected media.\n             */\n            function getFileExtension(fileType) {\n                if (fileType.indexOf(\"video/avi\") != -1 || fileType.indexOf(\"video/x-msvideo\") != -1) {\n                    return \"avi\";\n                }\n                if (fileType.indexOf(\"video/mpeg\") != -1 || fileType.indexOf(\"video/mpg\") != -1 ||\n                    fileType.indexOf(\"audio/mpeg\") != -1 || fileType.indexOf(\"audio/mpg\") != -1) {\n                    return \"mpeg\";\n                }\n                if (fileType.indexOf(\"video/mp4\") != -1 || fileType.indexOf(\"video/m4v\") != -1 ||\n                    fileType.indexOf(\"audio/mp4\") != -1) {\n                    return \"mp4\";\n                }\n                if (fileType.indexOf(\"video/ogg\") != -1) {\n                    return \"ogg\";\n                }\n                if (fileType.indexOf(\"video/quicktime\") != -1) {\n                    return \"mov\";\n                }\n                if (fileType.indexOf(\"video/VP8\") != -1 || fileType.indexOf(\"video/VP9\") != -1 ||\n                    fileType.indexOf(\"video/vp8\") != -1 || fileType.indexOf(\"video/vp9\") != -1 ||\n                    fileType.indexOf(\"video/webm\") != -1) {\n                    return \"webm\";\n                }\n                if (fileType.indexOf(\"video/x-flv\") != -1 || fileType.indexOf(\"video/x-f4v\") != -1) {\n                    return \"flv\";\n                }\n                if (fileType.indexOf(\"video/x-matroska\") != -1) {\n                    return \"mkv\";\n                }\n                if (fileType.indexOf(\"video/x-ms-wmv\") != -1) {\n                    return \"wmv\";\n                }\n\n                if (fileType.indexOf(\"audio/ac3\") != -1) {\n                    return \"ac3\";\n                }\n                if (fileType.indexOf(\"audio/ogg\") != -1) {\n                    return \"ogg\";\n                }\n                if (fileType.indexOf(\"audio/wav\") != -1) {\n                    return \"wav\";\n                }\n                if (fileType.indexOf(\"audio/x-ms-wma\") != -1) {\n                    return \"wma\";\n                }\n\n                if (fileType.indexOf(\"image/gif\") != -1) {\n                    return \"gif\";\n                }\n                if (fileType.indexOf(\"image/jpeg\") != -1) {\n                    return \"jpg\";\n                }\n                if (fileType.indexOf(\"image/png\") != -1) {\n                    return \"png\";\n                }\n                if (fileType.indexOf(\"image/tiff\") != -1) {\n                    return \"tiff\";\n                }\n\n                return \"webm\";\n            }\n\n            /**\n             * This function checks metadata.\n             * @access public\n             */\n            function checkForm() {\n                if (blobUrl === null ||\n                    videoBlob === null ||\n                    videoBlob.size === 0 ||\n                    sizeResult === false ||\n                    $(\"#name\").val() === \"\" ||\n                    $(\"#tags\").val() === \"\" ||\n                    fileType === \"\" ||\n                    fileType === \"N/A\") {\n                    // Dsiable upload button.\n                    $(\"#entry_submit\").prop(\"disabled\", true);\n                    $(\"#entry\").val(\"\");\n                } else {\n                    // Enable upload button.\n                    $(\"#entry_submit\").prop(\"disabled\", false);\n                }\n            }\n\n            /**\n             * This function prints error message.\n             * @access public\n             * @param {string} errorMessage - string of error message.\n             */\n            function printErrorMessage(errorMessage) {\n                $(\"#upload_info\").html(\"\");\n                $(\"#upload_info\").append(\"<font color=\\\"red\\\">\" + errorMessage + \"</font><br>\");\n\n                disableInsertButton();\n                enableCancelButton();\n            }\n\n            /**\n             * This function prints success message.\n             * @access public\n             * @param {string} id - id of media entry.\n             * @param {string} name - name of media entry.\n             * @param {string} tags - tags of media entry.\n             * @param {string} description - description of media entry.\n             * @param {string} creatorId - username of creator.\n             */\n            function printSuccessMessage(id, name, tags, description, creatorId) {\n\n                require(['core/str', 'core/notification'], function(str, notification) {\n                    var strings = [\n                        {key: 'upload_success', component: 'local_yumymedia'},\n                        {key: 'entryid_header', component: 'local_yumymedia'},\n                        {key: 'name_header', component: 'local_yumymedia'},\n                        {key: 'tags_header', component: 'local_yumymedia'},\n                        {key: 'desc_header', component: 'local_yumymedia'},\n                        {key: 'creatorid_header', component: 'local_yumymedia'},\n                        {key: 'insert_media', component: 'atto_yukaltura'}\n                    ];\n                    str.get_strings(strings).then(function(results) {\n                        var output = '<h3>' + results[0] + '</h3>';\n                        output += '<table border=\"2\" cellpadding=\"5\">';\n                        output += '<tr><td>' + results[1] + '</td><td>' + id + '</td></tr>';\n                        output += '<tr><td>' + results[2] + '</td><td>' + name + '</td></tr>';\n                        output += '<tr><td>' + results[3] + '</td><td>' + tags + '</td></tr>';\n                        output += '<tr><td>' + results[4] + '</td><td>' + description + '</td></tr>';\n                        output += '<tr><td>' + results[5] + '</td><td>' + creatorId + '</td></tr>';\n                        output += '</table>';\n                        output += '<br>';\n                        output += '<p><font color=\"red\">' + results[6] + '</font></p>';\n                        $(\"#upload_info\").html(output);\n                        return 0;\n                    }).fail(notification.exception);\n                });\n\n                // Enable dialogue buttons.\n                enableInsertButton();\n                enableCancelButton();\n            }\n\n            /**\n             * This function is callback for reset button.\n             * @access public\n             */\n            function handleResetClick() {\n                $(\"#file_info\").html(\"\");\n                $(\"#type\").val(\"\");\n\n                uploadFileType = \"\";\n                naturalWidth = 0;\n                naturalHeight = 0;\n\n                disableInsertButton();\n                enableCancelButton();\n            }\n\n            /**\n             * This function checks name of media.\n             * @access public\n             * @param {string} str - name of media.\n             * @return {bool} - if name is appropriate, return \"true\". Otherwise, return \"false\".\n             */\n            function checkNameString(str) {\n                var regex = /[\"$%&'~^\\\\`/]/;\n                if (regex.test(str) === true) {\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n\n            /**\n             * This function checks tags of media.\n             * @access public\n             * @param {string} str - tagas of media.\n             * @return {bool} - if tags are appropriate, return \"true\". Otherwise, return \"false\".\n             */\n            function checkTagsString(str) {\n                var regex = /[!\"#$%&'~|^\\\\@`()[\\]{}:;+*/=<>?]/;\n                if (regex.test(str) === true) {\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n\n            /**\n             * This function checks metadata of media.\n             * @access public\n             * @return {bool} - if metadata is appropriate, return \"true\". Otherwise, return \"false\".\n             */\n            function checkMetadata() {\n                var nameStr = $(\"#name\").val();\n                var tagsStr = $(\"#tags\").val();\n                var descStr = $(\"#description\").val();\n\n                var flag = true;\n\n                if (checkNameString(nameStr) === false) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('wrong_name', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            window.alert(localizedString);\n                        });\n                    });\n                    flag = false;\n                }\n\n                if (checkTagsString(tagsStr) === false) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('wrong_tags', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            window.alert(localizedString);\n                        });\n                    });\n                    flag = false;\n                }\n\n                if (checkNameString(descStr) === false) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('wrong_desc', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            window.alert(localizedString);\n                        });\n                    });\n                    flag = false;\n                }\n\n                return flag;\n            }\n\n            /**\n             * This function is callback for submit button.\n             * @access public\n             * @return {bool} - if file is uploaded, return true. Otherwise, return false.\n             */\n            function handleSubmitClick() {\n\n                if (checkMetadata() === false) {\n                    return false;\n                }\n\n                if (checkFileSize() === false) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('wrong_filesize', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            window.alert(localizedString);\n                        });\n                    });\n                    return false;\n                }\n\n                $(\"#entry_submit\").prop(\"disabled\", true);\n                executeUploadProcess(); // Executes upload.\n\n                return true;\n            }\n\n            /**\n             * This function get hidden parameters.\n             * @access public\n             */\n            function getHiddenParameters() {\n                // Create new element if entry id element is null.\n                if (parent.document.getElementById('yukaltura_select_id') === null ||\n                    parent.document.getElementById('yukaltura_select_id')[0] === null) {\n                    var element = $('body', parent.document);\n\n                    var str = '<input type=\"hidden\" name=\"yukaltura_select_id\" id=\"yukaltura_select_id\" value=\"\">';\n                    element.append(str);\n\n                    str = '<input type=\"hidden\" name=\"yukaltura_select_name\" id=\"yukaltura_select_name\" value=\"\">';\n                    element.append(str);\n\n                    var kalturahost = $('#kalturahost').val();\n                    str = '<input type=\"hidden\" name=\"yukaltura_host\" id=\"yukaltura_host\" value=\"';\n                    str = str + kalturahost + '\">';\n                    element.append(str);\n\n                    var partnerid = $('#partnerid').val();\n                    str = '<input type=\"hidden\" name=\"yukaltura_partnerid\" id=\"yukaltura_partnerid\" value=\"';\n                    str = str + partnerid + '\">';\n                    element.append(str);\n\n                    var uiconfid = $('#uiconfid').val();\n                    str = '<input type=\"hidden\" name=\"yukaltura_uiconfid\" id=\"yukaltura_uiconfid\" value=\"';\n                    str = str + uiconfid + '\">';\n                    element.append(str);\n\n                    var width = $('#player_width').val();\n                    str = '<input type=\"hidden\" name=\"yukaltura_width\" id=\"yukaltura_width\" value=\"' + width + '\">';\n                    element.append(str);\n\n                    var height = $('#player_height').val();\n                    str = '<input type=\"hidden\" name=\"yukaltura_height\" id=\"yukaltura_height\" value=\"' + height + '\">';\n                    element.append(str);\n\n                    var studio = $('#player_studio').val();\n                    str = '<input type=\"hidden\" name=\"yukaltura_playerstudio\" id=\"yukaltura_playerstudio\" value=\"' + studio + '\">';\n                    element.append(str);\n\n                    str = '<input type=\"hidden\" name=\"yukaltura_filetype\" id=\"yukaltura_filetype\" value=\"\">';\n                    element.append(str);\n\n                    str = '<input type=\"hidden\" name=\"yukaltura_naturalwidth\" id=\"yukaltura_naturalwidth\" value=\"\">';\n                    element.append(str);\n\n                    str = '<input type=\"hidden\" name=\"yukaltura_naturalheight\" id=\"yukaltura_naturalheight\" value=\"\">';\n                    element.append(str);\n                }\n            }\n\n            /**\n             * This function update hidden parameters,\n             * @access public\n             * @param {string} id - id of media entry.\n             * @param {string} name - name of media entry.\n             */\n            function updateHiddenParameters(id, name) {\n                if (id !== null && id !== '' &&\n                    parent.document.getElementById('yukaltura_select_id') !== null &&\n                    parent.document.getElementById('yukaltura_select_id')[0] !== null) {\n                    // Set entry id of selectd media.\n                    $('#yukaltura_select_id', parent.document).val(id);\n                    // Set entry name of selected media.\n                    $('#yukaltura_select_name', parent.document).val(name);\n\n                    $('#yukaltura_filetype', parent.document).val(uploadFileType);\n                    $('#yukaltura_naturalwidth', parent.document).val(naturalWidth);\n                    $('#yukaltura_naturalheight', parent.document).val(naturalHeight);\n                }\n            }\n\n            /**\n             * This function enable insert button.\n             * @access public\n             */\n            function enableInsertButton() {\n                // Eable insert button.\n                $('#yukaltura_insert_btn', parent.document).prop(\"disabled\", false);\n                $('#yukaltura_insert_btn', parent.document).css({opacity: \"1.0\"});\n            }\n\n            /**\n             * This function disable insert button.\n             * @access public\n             */\n            function disableInsertButton() {\n                // Disable insert button.\n                $('#yukaltura_insert_btn', parent.document).prop(\"disabled\", true);\n                $('#yukaltura_insert_btn', parent.document).css({opacity: \"0.5\"});\n            }\n\n            /**\n             * This function enable cancel button.\n             * @access public\n             */\n            function enableCancelButton() {\n                // Eable cancel button.\n                $('#yukaltura_cancel_btn', parent.document).prop(\"disabled\", false);\n                $('#yukaltura_cancel_btn', parent.document).css({opacity: \"1.0\"});\n            }\n\n            /**\n             * This function disable cancel button.\n             * @access public\n             */\n            function disableCancelButton() {\n                // Disable cancel button.\n                $('#yukaltura_cancel_btn', parent.document).prop(\"disabled\", true);\n                $('#yukaltura_cancel_btn', parent.document).css({opacity: \"0.5\"});\n            }\n\n            /**\n             * This function executes upload process.\n             * @access public\n             */\n            function executeUploadProcess() {\n                var serverHost = $(\"#kalturahost\").val(); // Get hostname of kaltura server.\n                var ks = $(\"#ks\").val(); // Get session id.\n\n                disableInsertButton();\n                disableCancelButton();\n\n                getHiddenParameters();\n\n                // Create upload token.\n                createUploadToken(serverHost, ks);\n            }\n\n            /**\n             * This function deletes upload token.\n             * @access public\n             * @param {string} serverHost - hostname of kaltura server.\n             * @param {string} ks - session string of kaltura connection.\n             * @param {string} uploadTokenId - token id for uploading.\n             * @return {bool} - if upload token is deleted, return true.\n             */\n            function deleteUploadToken(serverHost, ks, uploadTokenId) {\n                var fd = new FormData();\n                var flag;\n\n                // Set form data.\n                fd.append(\"action\", \"delete\");\n                fd.append(\"ks\", ks);\n                fd.append(\"uploadTokenId\", uploadTokenId);\n\n                // Set transmission data.\n                var postData = {\n                    type: \"POST\",\n                    data: fd,\n                    cache: false,\n                    contentType: false,\n                    scriptCharset: \"utf-8\",\n                    processData: false,\n                    async: true,\n                    dataType: \"xml\"\n                };\n\n                var serviceURL = serverHost + \"/api_v3/service/uploadToken/action/delete\";\n\n                // Transmits a data.\n                $.ajax(\n                    serviceURL, postData\n                )\n                .done(function(xmlData) {\n                    // When response is not XML.\n                    if (xmlData === null) {\n                        flag = false;\n                    }\n                    flag = true;\n                })\n                .fail(function(xmlData) {\n                    flag = false;\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                });\n\n                return flag;\n            }\n\n            /**\n             * This function creates upload token.\n             * @access public\n             * @param {string} serverHost - hostname of kaltura server.\n             * @param {string} ks - session string of kaltura connection.\n             */\n            function createUploadToken(serverHost, ks) {\n                var uploadTokenId;\n                var findData;\n\n                var postData = {\n                    type: \"GET\",\n                    cache: false,\n                    async: true,\n                    contentType: false,\n                    scriptCharset: \"utf-8\",\n                    dataType: \"xml\"\n                };\n\n                var serviceURL = serverHost + \"/api_v3/service/uploadToken/action/add?ks=\" + ks;\n                serviceURL = serviceURL + \"&uploadToken:objectType=KalturaUploadToken\";\n                serviceURL = serviceURL + \"uploadToken:fileName=\" + encodeURI(videoFilename);\n                serviceURL = serviceURL + \"&uploadToken:fileSize=\" + videoBlob.size;\n                serviceURL = serviceURL + \"&uploadToken:autoFinalize=\" + AUTO_FINALIZE.NULL;\n\n                // Transmits data.\n                $.ajax(\n                    serviceURL, postData\n                )\n                .done(function(xmlData) {\n                    // Response is not XML.\n                    if (xmlData === null) {\n                        printErrorMessage(\"Cannot create upload token !<br>(Cannot get a XML response.)\");\n                        return;\n                    }\n\n                    // Get a tag of error code.\n                    findData = $(xmlData).find(\"code\");\n                    // There exists error code.\n                    if (findData !== null && typeof findData !== undefined && findData.text() !== \"\") {\n                        printErrorMessage(\"Cannot create upload token !<br>(\" + findData.text() + \")\");\n                        return;\n                    }\n\n                    findData = $(xmlData).find(\"status\");\n                    // There not exists upload token id.\n                    if (findData === null || typeof findData === undefined || findData.text() === \"\") {\n                        printErrorMessage(\"Cannot create upload token !<br>(Cannot get status of upload token.)\");\n                        return;\n                    }\n\n                    var uploadTokenStatus = findData.text();\n                    if (uploadTokenStatus != UPLOAD_TOKEN_STATUS.PENDING) {\n                        printErrorMessage(\"Cannot create upload token !<br>(UPLOAD_TOKEN_STATUS : \" + uploadTokenStatus + \")\");\n                        return;\n                    }\n\n                    // Get upload token id.\n                    findData = $(xmlData).find(\"id\");\n                    // There not exists upload token id.\n                    if (findData === null || typeof findData === undefined || findData.text() === \"\") {\n                        printErrorMessage(\"Cannot create uplaod token !<br>(Cannot get an uploadTokenId.)\");\n                        return;\n                    }\n                    uploadTokenId = findData.text();\n                    // Entry metadata.\n                    setTimeout(function() {\n                        createMediaEntry(serverHost, ks, uploadTokenId);\n                    }, 50);\n\n                })\n                .fail(function(xmlData) {\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                    printErrorMessage(\"Cannot create upload token !<br>(Cannot connect to kaltura server.)\");\n                });\n            }\n\n            /**\n             * This function creates media entry.\n             * @access public\n             * @param {string} serverHost - hostname of kaltura server.\n             * @param {string} ks - session string of kaltura connecion;\n             * @param {string} uploadTokenId - upload token id.\n             */\n            function createMediaEntry(serverHost, ks, uploadTokenId) {\n                var findData;\n                var entryStatus;\n                var entryId = \"\";\n                var entryName = \"\";\n                var entryTags = \"\";\n                var entryDescription = \"\";\n                var entryCreatorId = \"\";\n\n                var nameStr = $(\"#name\").val();\n                var tagsStr = $(\"#tags\").val();\n                var descStr = $(\"#description\").val();\n                var controlId = $(\"#controlId\").val();\n                var creatorId = $(\"#creatorId\").val();\n\n                nameStr = nameStr.trim();\n                tagsStr = tagsStr.trim();\n                if (descStr !== null) {\n                    descStr = descStr.trim();\n                }\n\n                var fd = new FormData();\n\n                // Creates form data.\n                fd.append(\"action\", \"add\");\n                fd.append(\"ks\", ks);\n                fd.append(\"entry:objectType\", \"KalturaMediaEntry\");\n                fd.append(\"entry:mediaType\", MEDIA_TYPE.VIDEO);\n                fd.append(\"entry:sourceType\", 1);\n                fd.append(\"entry:name\", nameStr);\n                fd.append(\"entry:tags\", tagsStr);\n                if (descStr !== null && descStr !== \"\") {\n                    fd.append(\"entry:description\", descStr);\n                } else {\n                    fd.append(\"entry:description\", \"\");\n                }\n\n                fd.append(\"entry:categories\", $(\"#categories\").val());\n\n                if (controlId !== null && controlId !== \"\") {\n                    fd.append(\"entry:accessControlId\", controlId);\n                }\n\n                fd.append(\"entry:creatorId\", creatorId);\n                fd.append(\"entry:userId\", creatorId);\n\n                // Creates transmission data.\n                var postData = {\n                    type: \"POST\",\n                    data: fd,\n                    cache: false,\n                    async: true,\n                    contentType: false,\n                    scriptCharset: \"utf-8\",\n                    processData: false,\n                    dataType: \"xml\"\n                };\n\n                var serviceURL = serverHost + \"/api_v3/service/media/action/add\";\n\n                // Transmits data.\n                $.ajax(\n                    serviceURL, postData\n                )\n                .done(function(xmlData) {\n                    // Response is not XML.\n                    if (xmlData === null || typeof xmlData === undefined) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot create media entry !<br>(Cannot get a XML response.)\");\n                        return;\n                    }\n\n                    // Get a tag of error code.\n                    findData = $(xmlData).find(\"code\");\n                    // There exists an error code.\n                    if (findData !== null && typeof findData !== undefined && findData.text() !== \"\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot create media entry !<br>(\" + findData.text() + \")\");\n                        return;\n                    }\n\n                    // Get a tag of status.\n                    findData = $(xmlData).find(\"status\");\n                    // There not exists a tag of status.\n                    if (findData === null || typeof findData === undefined || findData.text() === \"\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot create media entyry !<br>(Cannot get a mediaEntryStatus.)\");\n                        return;\n                    }\n\n                    // Get a value of status.\n                    entryStatus = findData.text();\n                    // When uploading of metadata failed.\n                    if (entryStatus != ENTRY_STATUS.ENTRY_NO_CONTENT) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot create media entry!<br>(mediaEntryStatus: \" + entryStatus + \")\");\n                        return;\n                    }\n\n                    // Get a tag of entry id.\n                    findData = $(xmlData).find(\"id\");\n                    // Get a value of entry id.\n                    entryId = findData.text();\n                    // Get a tag of name.\n                    findData = $(xmlData).find(\"name\");\n                    // Get a value of name.\n                    entryName = findData.text();\n                    // Get a tag of tags.\n                    findData = $(xmlData).find(\"tags\");\n                    // Get a value of tags.\n                    entryTags = findData.text();\n                    // Get a tag of description.\n                    findData = $(xmlData).find(\"description\");\n                    // There exists description.\n                    if (findData !== null && typeof findData !== undefined && findData.text() !== \"\") {\n                        // Get a value of description.\n                        entryDescription = findData.text();\n                    } else {\n                        entryDescription = \"\";\n                    }\n                    // Get a tago of creator id.\n                    findData = $(xmlData).find(\"creatorId\");\n                    // Get a value of creator id.\n                    entryCreatorId = findData.text();\n\n                    if (entryId === null || entryId === \"\" || entryName === null || entryName === \"\" ||\n                        entryTags === null || entryTags === \"\" || entryCreatorId === null || entryCreatorId === \"\" ||\n                        descStr !== \"\" && (entryDescription === null || entryDescription === \"\")) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"There exists wrong information(s) <br>\");\n                        return;\n                    }\n\n                    // Associate uploaded file with media entry.\n                    setTimeout(function() {\n                        uploadMediaFile(serverHost, ks, uploadTokenId, entryId);\n                    }, 50);\n\n                })\n                .fail(function(xmlData) {\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                    deleteUploadToken(serverHost, ks, uploadTokenId);\n                    printErrorMessage(\"Cannot create media entry !<br>(Cannot connect to kaltura server.)\");\n                    return;\n                });\n            }\n\n            /**\n             * This function uploads media file.\n             * @access public\n             * @param {string} serverHost - hostname of kaltura server.\n             * @param {string} ks - session string of kaltura connection.\n             * @param {string} uploadTokenId - upload token id.\n             * @param {string} entryId - id of media entry.\n             */\n            function uploadMediaFile(serverHost, ks, uploadTokenId, entryId) {\n                var findData;\n                var fd = new FormData();\n\n                $(\"#upload_info\").html(\"\");\n\n                require(['core/str'], function(str) {\n                    var message = str.get_string('recorder_uploading', 'local_yumymedia', null);\n                    $.when(message).done(function(localizedString) {\n                        $(\"#upload_info\").append(localizedString + \"<br>\");\n                    });\n                });\n\n                require(['core/str'], function(str) {\n                    var message = str.get_string('progress', 'local_yumymedia', null);\n                    $.when(message).done(function(localizedString) {\n                        var str = \"<p>\" + localizedString;\n                        str = str + \": <span id=\\\"pvalue\\\" style=\\\"color:#00b200\\\">0.00</span> %</p>\";\n                        $(\"#upload_info\").append(str);\n                    });\n                });\n\n                // Creates form data.\n                fd.append(\"action\", \"upload\");\n                fd.append(\"ks\", ks);\n                fd.append(\"uploadTokenId\", uploadTokenId);\n                fd.append(\"fileData\", videoBlob, encodeURI(videoFilename), videoBlob.size);\n                fd.append(\"resume\", false);\n                fd.append(\"finalChunk\", true);\n                fd.append(\"resumeAt\", 0);\n\n                // Creates tnramission data.\n                var postData = {\n                    type: \"POST\",\n                    data: fd,\n                    cache: false,\n                    async: true,\n                    contentType: false,\n                    scriptCharset: \"utf-8\",\n                    processData: false,\n                    dataType: \"xml\",\n                    xhr: function() {\n                        var XHR = $.ajaxSettings.xhr();\n                        if (XHR.upload) {\n                            XHR.upload.addEventListener(\"progress\", function(e) {\n                                var newValue = parseInt(e.loaded / e.total * 100);\n                                $(\"#pvalue\").html(parseInt(newValue));\n                            }, false);\n                        }\n                        return XHR;\n                    }\n                };\n\n                var serviceURL = serverHost + \"/api_v3/service/uploadToken/action/upload\";\n\n                // Transmits data.\n                $.ajax(\n                    serviceURL, postData\n                )\n                .done(function(xmlData) {\n                    // Response is not XML.\n                    if (xmlData === null) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot upload the video !<br>(Cannot get a XML response.)\");\n                        return;\n                    }\n\n                    // Get a tag of error code.\n                    findData = $(xmlData).find(\"code\");\n                    // There exists error code.\n                    if (findData !== null && typeof findData !== undefined && findData.text() !== \"\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot upload the video !<br>(\" + findData.text() + \")\");\n                        return;\n                    }\n\n                    // Get upload token id.\n                    findData = $(xmlData).find(\"status\");\n                    // There not exists upload token id.\n                    if (findData === null || typeof findData === undefined || findData.text() === \"\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot upload the video !<br>(Cannot get an uploadTokenStatus.)\");\n                        return;\n                    }\n\n                    var uploadTokenStatus = findData.text();\n                    if (uploadTokenStatus != UPLOAD_TOKEN_STATUS.FULL_UPLOAD &&\n                        uploadTokenStatus != UPLOAD_TOKEN_STATUS.PARTIAL_UPLOAD) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot upload the video !<br>(UPLOAD_TOKEN_STATUS : \" + uploadTokenStatus + \")\");\n                        return;\n                    } else {\n                        window.console.log(\"File chunk have been transmitted.\");\n                    }\n\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('attach_file', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            $(\"#upload_info\").append(localizedString + \"<br>\");\n                        });\n                    });\n\n                    // Create media entry.\n                    setTimeout(function() {\n                        attachUploadedFile(serverHost, ks, uploadTokenId, entryId);\n                    }, 1000);\n\n                })\n                .fail(function(xmlData) {\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                    deleteUploadToken(serverHost, ks, uploadTokenId);\n                    printErrorMessage(\"Cannot upload the file !<br>(Cannot connect to contents server.)\");\n                    return;\n                });\n            }\n\n            /**\n             * This function uploads metadata.\n             * @access public\n             * @param {string} serverHost - hostname of kaltura server.\n             * @param {string} ks - session string of kaltura connection.\n             * @param {string} uploadTokenId - upload token id.\n             * @param {string} entryId - id of media entry.\n             */\n            function attachUploadedFile(serverHost, ks, uploadTokenId, entryId) {\n                var entryStatus;\n                var entryName = \"\";\n                var entryTags = \"\";\n                var entryDescription = \"\";\n                var entryCreatorId = \"\";\n\n                var findData;\n\n                // Creates form data.\n                var fd = new FormData();\n                fd.append(\"action\", \"addContent\");\n                fd.append(\"ks\", ks);\n                fd.append(\"entryId\", entryId);\n                fd.append(\"resource:objectType\", \"KalturaUploadedFileTokenResource\");\n                fd.append(\"resource:token\", uploadTokenId);\n\n                // Creates transmission data.\n                var postData = {\n                    type: \"POST\",\n                    data: fd,\n                    cache: false,\n                    async: true,\n                    contentType: false,\n                    scriptCharset: \"utf-8\",\n                    processData: false,\n                    dataType: \"xml\"\n                };\n\n                var serviceURL = serverHost + \"/api_v3/service/media/action/addContent\";\n\n                // Transmits data.\n                $.ajax(\n                    serviceURL, postData\n                )\n                .done(function(xmlData) {\n                    // Response is not XML.\n                    if (xmlData === null || typeof xmlData === undefined) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot attach uploaded file !<br>(Cannot get a XML response.)\");\n                        return;\n                    }\n\n                    // Get a tag of error code.\n                    findData = $(xmlData).find(\"code\");\n                    // There exists error code.\n                    if (findData !== null && typeof findData !== undefined && findData.text() !== \"\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot attach uploaded file !<br>(\" + findData.text() + \")\");\n                        return;\n                    }\n\n                    // Get a tag of status.\n                    findData = $(xmlData).find(\"status\");\n                    // There not exists a tag of status.\n                    if (findData === null || typeof findData === undefined || findData.text() === \"\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot attach uploaded file !<br>(Cannot get a mediaEntryStatus.)\");\n                        return;\n                    }\n\n                    // Get a value of status.\n                    entryStatus = findData.text();\n                    // When uploading of metadata failed.\n                    if (entryStatus != ENTRY_STATUS.ENTRY_READY && entryStatus != ENTRY_STATUS.ENTRY_PENDING &&\n                        entryStatus != ENTRY_STATUS.ENTRY_PRECONVERT && entryStatus != ENTRY_STATUS.IMPORT &&\n                        entryStatus != ENTRY_STATUS.IMPORTING) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot attach uploaded file !<br>(mediaEntryStatus: \" + entryStatus + \")\");\n                        return;\n                    }\n\n                    // Get a tag of entry id.\n                    findData = $(xmlData).find(\"id\");\n                    // Get a value of entry id.\n                    entryId = findData.text();\n                    // Get a tag of name.\n                    findData = $(xmlData).find(\"name\");\n                    // Get a value of name.\n                    entryName = findData.text();\n                    // Get a tag of tags.\n                    findData = $(xmlData).find(\"tags\");\n                    // Get a value of tags.\n                    entryTags = findData.text();\n                    // Get a tag of description.\n                    findData = $(xmlData).find(\"description\");\n                    // There exists description.\n                    if (findData !== null && typeof findData !== undefined && findData.text() !== \"\") {\n                        // Get a value of description.\n                        entryDescription = findData.text();\n                    } else {\n                        entryDescription = \"\";\n                    }\n                    // Get a tago of creator id.\n                    findData = $(xmlData).find(\"creatorId\");\n                    // Get a value of creator id.\n                    entryCreatorId = findData.text();\n\n                    // Prints success message.\n                    printSuccessMessage(entryId, entryName, entryTags, entryDescription, entryCreatorId);\n                    // Update hidden parameters on editors' page.\n                    updateHiddenParameters(entryId, entryName);\n                })\n                .fail(function(xmlData) {\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                    deleteUploadToken(serverHost, ks, uploadTokenId);\n                    printErrorMessage(\"Cannot attach uploaded file !<br>(Cannot connect to kaltura server.)\");\n                    return;\n                });\n            }\n\n            /**\n             * This function close kaltura session.\n             * @access public\n             */\n            function sessionEnd() {\n                var serverHost = $(\"#kalturahost\").val(); // Get hostname of kaltura server.\n                var serviceURL = serverHost + \"/api_v3/service/session/action/end\";\n\n                // Transmits data.\n                $.ajax({\n                    type: \"GET\",\n                    url: serviceURL,\n                    cache: false\n                })\n                .done(function(xmlData) {\n                    // Response is not XML.\n                    if (xmlData === null) {\n                        window.console.log(\"Cannot delete the uploadToken ! (Cannot get a XML response.)\");\n                    } else {\n                        window.console.log(\"Kaltura Session has been deleted.\");\n                    }\n                })\n                .fail(function(xmlData) {\n                    window.console.log(\"Cannot delete the uploadToken ! (Cannot connect to kaltura server.)\");\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                });\n            }\n\n            /**\n             * This function removes hidden parameters in parent document.\n             * @access public\n             */\n            function removeParameters() {\n                $('#yukaltura_select_id', parent.document).remove();\n                $('#yukaltura_select_name', parent.document).remove();\n                $('#yukaltura_host', parent.document).remove();\n                $('#yukaltura_partnerid', parent.document).remove();\n                $('#yukaltura_uiconfid', parent.document).remove();\n                $('#yukaltura_playerstudio', parent.document).remove();\n                $('#yukaltura_width', parent.document).remove();\n                $('#yukaltura_height', parent.document).remove();\n                $('#yukaltura_filetype', parent.document).remove();\n                $('#yukaltura_naturalwidth', parent.document).remove();\n                $('#yukaltura_naturalheight', parent.document).remove();\n            }\n\n            // This function execute when window is chagned.\n            $(window).on(\"change\", function() {\n                checkForm();\n            });\n\n            // This function execute when window is loaded.\n            $(window).on(\"load\", function() {\n                $(\"#name\").val(\"\");\n                $(\"#tags\").val(\"\");\n                $(\"#description\").val(\"\");\n            });\n\n            removeVideo();\n\n            // This function execute when window is uloaded.\n            $(window).on(\"unload\", function() {\n                if (blobUrl !== null) {\n                    if (window.URL && window.URL.revokeObjectURL) {\n                        window.URL.revokeObjectURL(blobUrl);\n                    } else {\n                        window.webkitURL.revokeObjectURL(blobUrl);\n                    }\n                    videoBlob = null;\n                    blobUrl = null;\n                }\n\n                if (localStream !== null) {\n                    if (localStream.getTracks) {\n                        var tracks = localStream.getTracks();\n                        for (var i = tracks.length - 1; i >= 0; --i) {\n                            tracks[i].stop();\n                        }\n                    } else {\n                        localStream.stop();\n                    }\n                    if (document.getElementById(\"webcam\").srcObject) {\n                        document.getElementById(\"webcam\").srcObject = null;\n                    }\n                }\n\n                sessionEnd();\n            });\n\n            $(\"#name\").on(\"change\", function() {\n                checkForm();\n            });\n\n            $(\"#tags\").on(\"change\", function() {\n                checkForm();\n            });\n\n            $(\"#entry_submit\").on(\"click\", function() {\n                handleSubmitClick();\n            });\n\n            $(\"#entry_reset\").on(\"click\", function() {\n                handleResetClick();\n            });\n\n            removeParameters();\n            // Dsiable Insert button.\n            disableInsertButton();\n            // Enable cancel button.\n            enableCancelButton();\n        }\n    };\n});\n"],"names":["define","$","init","fileSize","sizeResult","fileType","uploadFileType","naturalWidth","naturalHeight","localStream","videoBlob","videoFilename","blobUrl","recorder","constraints","createObjectURL","window","URL","file","webkitURL","undefined","revokeObjectURL","MEDIA_TYPE","AUTO_FINALIZE","ENTRY_STATUS","ENTRY_IMPORTING","ENTRY_CONVERTING","ENTRY_IMPORT","ENTRY_PRECONVERT","ENTRY_READY","ENTRY_DELETED","ENTRY_PENDING","ENTRY_MODERATE","ENTRY_BLOCKED","ENTRY_NO_CONTENT","UPLOAD_TOKEN_STATUS","isIE","ua","navigator","userAgent","toLowerCase","ver","appVersion","isMsIE","indexOf","isIE6","isIE7","isIE8","isIE9","isIE10","isIE11","checkUnsupportedBrowser","isMsEdge","isChrome","isFirefox","isSafari","isOpera","browser","require","str","message","get_string","when","done","localizedString","printInitialErrorMessage","disableInsertButton","enableCancelButton","checkUnsupportedOS","os","match","html","startRecording","attr","val","off","on","ondataavailable","evt","Blob","data","type","document","getElementById","pause","currentTime","size","sizeStr","toFixed","checkFileType","checkFileSize","alert","checkForm","getFileExtension","getTracks","tracks","i","length","stop","srcObject","css","removeVideo","stopRecording","volume","start","location","protocol","mediaDevices","mozGetUserMedia","webkitGetUserMedia","getUserMedia","c","y","n","call","MediaRecorder","err","console","log","url","mimeOption","WebcamRecorder","MediaSource","isTypeSupported","audioBitsPerSecond","videoBitsPerSecond","mimeType","audio","echoCancellation","video","mandatory","minWidth","minHeight","maxWidth","maxHeight","minFrameRate","maxFrameRate","optional","facingMode","then","stream","play","catch","prop","printErrorMessage","errorMessage","append","printSuccessMessage","id","name","tags","description","creatorId","notification","get_strings","key","component","results","output","fail","exception","parent","opacity","checkNameString","test","handleSubmitClick","nameStr","tagsStr","descStr","flag","serverHost","ks","element","getHiddenParameters","uploadTokenId","findData","postData","cache","async","contentType","scriptCharset","dataType","serviceURL","encodeURI","ajax","xmlData","find","text","uploadTokenStatus","setTimeout","entryStatus","entryId","entryName","entryTags","entryDescription","entryCreatorId","controlId","trim","fd","FormData","processData","deleteUploadToken","xhr","XHR","ajaxSettings","upload","addEventListener","e","newValue","parseInt","loaded","total","IMPORT","IMPORTING","dir","attachUploadedFile","uploadMediaFile","createMediaEntry","createUploadToken","remove"],"mappings":"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"}